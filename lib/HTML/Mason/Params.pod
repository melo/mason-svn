#
# This documentation was automatically generated by the
# make_params_pod.pl script in the release
# directory of the CVS repository.
#
# Edit that script instead of this document.
#

__END__

=head1 NAME

HTML::Mason::Params - Constructor parameter documentation

=head1 DESCRIPTION

Mason has a lot of objects, most of which accept parameters when
passed to their constructor.  However, since most Mason objects are
made by other Mason objects, rather than by end users, Mason has been
designed so that when one object contains another, the container
object can accept constructor params not only for itself, but also for
any of its contained objects.

This means that typically, you simply make a top level object such as
an ApacheHandler or Interp object, and pass it whatever parameters you
want to set for any Mason object.

Of course, many people simply configure Mason via their httpd.conf
file, and don't ever make a Mason object.

This document lists B<all> of the Mason parameters are intended to be
used by end users.

=head1 PARAMETERS

=over 4

=item * allow_globals

An array of names of Perl variables that are allowed globally within components

Type:               list

Name in httpd.conf: AllowGlobals

Belongs to:         HTML::Mason::Compiler

=item * apache_status_title

The title of the Apache::Status page

Type:               string

Default:            HTML::Mason status

Name in httpd.conf: ApacheStatusTitle

Belongs to:         HTML::Mason::ApacheHandler

=item * args_method

Whether to use CGI.pm or Apache::Request for parsing the incoming HTTP request

Type:               string

Default:            mod_perl

Name in httpd.conf: ArgsMethod

Belongs to:         HTML::Mason::ApacheHandler

=item * auto_send_headers

Whether HTTP headers should be auto-generated

Type:               boolean

Default:            1

Name in httpd.conf: AutoSendHeaders

Belongs to:         HTML::Mason::Request::ApacheHandler

=item * autoflush

Whether output should be buffered or sent immediately

Type:               boolean

Default:            0

Name in httpd.conf: Autoflush

Belongs to:         HTML::Mason::Request

=item * autohandler_name

The filename to use for Mason's 'autohandler' capability

Type:               string

Default:            autohandler

Name in httpd.conf: AutohandlerName

Belongs to:         HTML::Mason::Interp

=item * code_cache_max_size

The maximum size of the component code cache

Type:               string

Default:            10485760

Name in httpd.conf: CodeCacheMaxSize

Belongs to:         HTML::Mason::Interp

=item * comp_class

The class into which component object should be blessed

Type:               string

Default:            HTML::Mason::Component

Name in httpd.conf: CompClass

Belongs to:         HTML::Mason::Compiler::ToObject

=item * comp_root

A string or array of arrays indicating the search path for component calls

Type:               list

Default:            filesystem root

Name in httpd.conf: CompRoot

Belongs to:         HTML::Mason::Resolver::File

=item * compiler

A Compiler object for compiling components

Type:               object

Default:            HTML::Mason::Compiler::ToObject->new

Belongs to:         HTML::Mason::Interp

=item * compiler_class

A Compiler object for compiling components

Type:               string

Name in httpd.conf: CompilerClass

Belongs to:         HTML::Mason::Interp

=item * data_cache_defaults

A hash of default parameters for Cache::Cache

Type:               hash

Name in httpd.conf: DataCacheDefaults

Belongs to:         HTML::Mason::Request

=item * data_dir

A directory for storing cache files and other state information

Type:               string

Name in httpd.conf: DataDir

Belongs to:         HTML::Mason::Interp

=item * decline_dirs

Whether Mason should decline to handle requests for directories

Type:               boolean

Default:            1

Name in httpd.conf: DeclineDirs

Belongs to:         HTML::Mason::ApacheHandler

=item * default_escape_flags

Escape flags that will apply by default to all Mason tag output

Type:               string

Default:            

Name in httpd.conf: DefaultEscapeFlags

Belongs to:         HTML::Mason::Compiler

=item * dhandler_name

The filename to use for Mason's 'dhandler' capability

Type:               string

Default:            dhandler

Name in httpd.conf: DhandlerName

Belongs to:         HTML::Mason::Interp

=item * error_format

How error messages are formatted

Type:               string

Default:            text

Name in httpd.conf: ErrorFormat

Belongs to:         HTML::Mason::Request

=item * error_mode

How error conditions are returned to the caller (brief, text, line or html)

Type:               string

Default:            fatal

Name in httpd.conf: ErrorMode

Belongs to:         HTML::Mason::Request

=item * fixed_source

When true, we only compile source files once

Type:               boolean

Default:            0

Name in httpd.conf: FixedSource

Belongs to:         HTML::Mason::Interp

=item * ignore_warnings_expr

A regular expression describing Perl warning messages to ignore

Type:               regex

Default:            /Subroutine .* redefined/i

Name in httpd.conf: IgnoreWarningsExpr

Belongs to:         HTML::Mason::Interp

=item * in_package

The package in which component execution should take place

Type:               string

Default:            HTML::Mason::Commands

Name in httpd.conf: InPackage

Belongs to:         HTML::Mason::Compiler::ToObject

=item * interp

A Mason interpreter for processing components

Type:               object

Default:            HTML::Mason::Interp->new

Belongs to:         HTML::Mason::ApacheHandler

=item * interp_class

A Mason interpreter for processing components

Type:               string

Name in httpd.conf: InterpClass

Belongs to:         HTML::Mason::ApacheHandler

=item * lexer

A Lexer object that will scan component text during compilation

Type:               object

Default:            HTML::Mason::Lexer->new

Belongs to:         HTML::Mason::Compiler

=item * lexer_class

A Lexer object that will scan component text during compilation

Type:               string

Name in httpd.conf: LexerClass

Belongs to:         HTML::Mason::Compiler

=item * max_recurse

The maximum recursion depth for component, inheritance, and request stack

Type:               string

Default:            32

Name in httpd.conf: MaxRecurse

Belongs to:         HTML::Mason::Interp

=item * out_method

A subroutine or scalar reference through which all output will pass

Type:               code

Default:            sub { print STDOUT {defined} @_ }

Name in httpd.conf: OutMethod

Belongs to:         HTML::Mason::Request

=item * postamble

A chunk of Perl code to add to the end of each compiled component

Type:               string

Default:            

Name in httpd.conf: Postamble

Belongs to:         HTML::Mason::Compiler::ToObject

=item * postprocess_perl

A subroutine through which all Perl code will be sent during compilation

Type:               code

Name in httpd.conf: PostprocessPerl

Belongs to:         HTML::Mason::Compiler

=item * postprocess_text

A subroutine through which all plain text will be sent during compilation

Type:               code

Name in httpd.conf: PostprocessText

Belongs to:         HTML::Mason::Compiler

=item * preamble

A chunk of Perl code to add to the beginning of each compiled component

Type:               string

Default:            

Name in httpd.conf: Preamble

Belongs to:         HTML::Mason::Compiler::ToObject

=item * preloads

A list of components to load immediately when creating the Interpreter

Type:               list

Name in httpd.conf: Preloads

Belongs to:         HTML::Mason::Interp

=item * preprocess

A subroutine through which all component text will be sent during compilation

Type:               code

Name in httpd.conf: Preprocess

Belongs to:         HTML::Mason::Compiler

=item * resolver

A Resolver object for fetching components from storage

Type:               object

Default:            HTML::Mason::Resolver::File->new

Belongs to:         HTML::Mason::Interp

=item * resolver_class

A Resolver object for fetching components from storage

Type:               string

Name in httpd.conf: ResolverClass

Belongs to:         HTML::Mason::Interp

=item * subcomp_class

The class into which subcomponent objects should be blessed

Type:               string

Default:            HTML::Mason::Component::Subcomponent

Name in httpd.conf: SubcompClass

Belongs to:         HTML::Mason::Compiler::ToObject

=item * use_object_files

Whether to cache component objects on disk

Type:               boolean

Default:            1

Name in httpd.conf: UseObjectFiles

Belongs to:         HTML::Mason::Interp

=item * use_strict

Whether to turn on Perl's 'strict' pragma in components

Type:               boolean

Default:            1

Name in httpd.conf: UseStrict

Belongs to:         HTML::Mason::Compiler::ToObject

=back

=cut
